{"version":3,"sources":["components/TimerLayout/TimerLayout.jsx","store/action/action.js","components/Settings/Settings.js","components/Info/Info.js","components/Audio/finished.mp3","components/StartStop/StartStop.js","components/Main/Main.jsx","App.js","store/reducers/reducers.js","store/store.js","index.js"],"names":["TimerLayout","props","useDispatch","useSelector","state","sessionLength","minuteSecond","minutes","timerRunning","Math","floor","seconds","interval","radius","circumference","normalizedRadius","PI","strokeDashoffset","className","width","viewBox","stroke","fill","strokeWidth","r","cx","cy","style","class","slice","SAVE_TIME","START_TIME","DECREASE_TIME","SWITCH_SESSION","SHORT_BREAK","LONG_BREAK","STOP_TIME","RESET_TIME","start_time","type","decrease_time","switchSession","short_Break","long_Break","Settings","useState","show","setShow","handleClose","shortBreak","setShortBreak","longBreak","setLongBreak","countFromStore","count","setCount","dispatch","Button","height","onClick","Modal","onHide","value","minute","onChange","e","setMinute","target","Footer","marginTop","textAlign","obj","Info","marginRight","StartStop","Main","button","count1","setCount1","console","log","shortBreak1","setShortBreak1","longBreak1","setLongBreak1","audio","Audio","sound","useEffect","setInterval","play","setTimeout","alert","clearInterval","App","localStorage","setItem","JSON","stringify","removeItem","initialState","createStore","action","length25","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kUA6HeA,MAlDf,SAAqBC,GACFC,cACKC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,iBADjD,IAEMC,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAME,gBAE5CC,GADiBJ,aAAY,SAAAC,GAAK,OAAIA,EAAMI,gBAClCC,KAAKC,MAAMJ,EAAe,KACpCK,EAAUL,EAAyB,GAAVC,EAEvBK,EAAWT,aAAY,SAAAC,GAAK,OAAIA,EAAMQ,YACtCC,EAAS,IAIPC,EAAgBC,IAAuBN,KAAKO,GAC9CC,EAAmBH,EAAkBR,EAAe,GAAOQ,EAGjE,OACI,mCACA,sBAAKI,UAAU,cAAf,UACM,sBAAKC,MAAM,OAAOC,QAAO,cAASP,IAAT,YAAuBA,KAAhD,UACI,wBACIQ,OAAO,OACPC,KAAK,OACLC,YAdD,EAeCC,EAdOX,IAePY,GAAIZ,EACJa,GAAIb,IAER,wBACIQ,OAAO,UACPC,KAAK,cACLC,YAtBD,EAwBCI,MAAO,CAAEV,oBACTO,EAxBOX,IAyBPY,GAAIZ,EACJa,GAAIb,OAGZ,sBAAKe,MAAM,aAAX,UACDrB,EAAU,IAAM,IAAMA,GAASsB,OAAO,GAAKtB,EAD1C,MACsDI,EAAU,IAAM,IAAMA,GAASkB,OAAO,GAAKlB,EACnG,mDACA,4BAAIC,a,gCCtHDkB,EAAY,YACZC,EAAa,aACbC,EAAgB,gBAChBC,EAAiB,iBACjBC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAa,aASbC,EAAa,iBAAO,CAC/BC,KAAMR,IAIKS,EAAgB,iBAAO,CAClCD,KAAMP,IAYKS,EAAgB,iBAAO,CAClCF,KAAMN,IAGKS,EAAc,iBAAO,CAChCH,KAAML,IAIKS,EAAa,iBAAO,CAC/BJ,KAAMJ,IC0ROS,MA9Ef,SAAkB3C,GAEhB,MAAwB4C,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAc,kBAAMD,GAAQ,IAElC,EAAoCF,mBAAS5C,EAAMgD,YAAnD,mBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,mBAAS5C,EAAMkD,WAAjD,mBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAA0BP,mBAAS5C,EAAMoD,gBAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWtD,cAWjB,OACE,qCACE,cAACuD,EAAA,EAAD,CAAQ9B,MAAO,CAAER,MAAO,GAAIuC,OAAQ,IAAMC,QAlB3B,kBAAMZ,GAAQ,IAkB7B,SACE,cAAC,IAAD,MAEF,cAACa,EAAA,EAAD,CAAO1C,UAAU,gBAAgB4B,KAAMA,EAAMe,OAAQb,EAArD,SACE,sBAAK9B,UAAU,sBAAf,UACE,0CACA,gCACE,0CACA,uBAEE4C,MAAO7D,EAAM8D,OACbC,SAAU,SAACC,GAAD,OAAOhE,EAAMiE,UAAUD,EAAEE,OAAOL,aAG9C,gCACE,6CACA,uBAEEA,MAAOb,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAce,EAAEE,OAAOL,aAG5C,gCACE,4CACA,uBAEEA,MAAOX,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAaa,EAAEE,OAAOL,aAG3C,gCACE,gDACA,uBACEvB,KAAK,SACLuB,MAAOR,EACPU,SAAU,SAACC,GAAD,OAAOV,EAASU,EAAEE,OAAOL,aAGvC,qBAAK5C,UAAU,OAAf,kDACA,8BACE,uBAAOA,UAAU,UAAUqB,KAAK,eAElC,cAACqB,EAAA,EAAMQ,OAAP,UACE,cAACX,EAAA,EAAD,CACE9B,MAAO,CAAE0C,UAAW,GAAIC,UAAW,UACnC/B,KAAK,UACLoB,QApDG,WD/PQ,IAACY,ECgQtBvB,IACAQ,GDjQsBe,ECiQHtE,EAAMsE,IDjQM,CAEjChC,KAAMT,EACNyC,UC6SU,+B,gBCtQGC,MA7Cf,WACA,MAAwB3B,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAG9B,OACE,qCACE,cAACU,EAAA,EAAD,CAAQ9B,MAAO,CAAER,MAAO,GAAIuC,OAAQ,GAAIe,YAAa,KAAOd,QAJjD,kBAAMZ,GAAQ,IAIzB,SACE,cAAC,IAAD,MAGF,cAACa,EAAA,EAAD,CAAO1C,UAAU,gBAAgB4B,KAAMA,EAAMe,OAAQb,EAArD,SAEE,sBAAK9B,UAAU,sBAAf,UACE,gCACE,0DACA,0LAMF,gCACE,gDACA,oQAOF,cAACuC,EAAA,EAAD,CACE9B,MAAO,CAAE0C,UAAW,IACpB9B,KAAK,UACLoB,QAASX,EAHX,4BCtCG,MAA0B,qCC+B1B0B,MA1Bf,WACI,IAAMlB,EAAWtD,cACbM,EAAeL,aAAY,SAAAC,GAAK,OAAIA,EAAMI,gBAI9C,OAHmBL,aAAY,SAAAC,GAAK,OAAIA,EAAME,gBAI5C,gCACE,wBACEqD,QAAS,WACQH,EAAfhD,EJUoB,CAC9B+B,KAAMH,GIXoDE,MAFpD,SAKG9B,EAAe,OAAS,aAE3B,wBACEmD,QAAS,WJQO,IAACY,EIPff,EJOwB,CAClCjB,KAAMF,EACNkC,SIXM,uBC2VOI,MA5Jf,WAEI,IAAMC,EAASzE,aAAY,SAAAC,GAAK,OAAIA,EAAMwE,UACpChE,EAAWT,aAAY,SAAAC,GAAK,OAAIA,EAAMQ,YACtCJ,EAAeL,aAAY,SAAAC,GAAK,OAAIA,EAAMI,gBAC1CF,EAAeH,aAAY,SAAAC,GAAK,OAAIA,EAAME,gBAC1C6C,EAAYhD,aAAY,SAAAC,GAAK,OAAIA,EAAM+C,aACvCF,EAAa9C,aAAY,SAAAC,GAAK,OAAIA,EAAM6C,cAExCI,GADgBlD,aAAY,SAAAC,GAAK,OAAIA,EAAMC,iBAC1BF,aAAY,SAACC,GAAD,OAAWA,EAAMkD,UACpD,EAA4BT,mBAASQ,GAArC,mBAAOwB,EAAP,KAAeC,EAAf,KACAC,QAAQC,IAAI,SAAWH,GACvB,IAAMtE,EAAUE,KAAKC,MAAMJ,EAAe,IAC1C,EAA4BuC,mBAAStC,GAArC,mBAAOwD,EAAP,KAAeG,EAAf,KACA,EAAsCrB,mBAASI,GAA/C,mBAAOgC,EAAP,KAAoBC,EAApB,KACA,EAAoCrC,mBAASM,GAA7C,mBAAOgC,EAAP,KAAmBC,EAAnB,KACAL,QAAQC,IAAI,cAAgBG,GAC5BJ,QAAQC,IAAI,eAAiBC,GAC7BF,QAAQC,IAAI,WAAajB,GACzB,IAAMP,EAAWtD,cACXmF,EAAQ,IAAIC,MAAMC,GAkCxBC,qBAAU,WACN,IAAIlC,EAAQ,KAuCZ,OAtCI9C,GAAgBF,EAAe,EAC/BgD,EAAQmC,aAAY,WAChBjC,EAAShB,OACd,IACQhC,GAAiC,IAAjBF,GACvB+E,EAAMK,OAEO,YAAb9E,GACA4C,EAASd,KACTiD,YAAW,WAffC,MAAM,mBAiBA,KAGgB,UAAbhF,GAAyC,IAAjBN,IAC7B4E,EAAeD,EAAc,GAC7BH,EAAUD,EAAS,GACnBrB,EAASf,KACTkD,YAAW,WAjDfC,MAAM,gBAcXP,EAAMK,SAqCM,IAEiB,IAAhBT,EACJH,EAAUD,EAAS,GAEC,IAAXA,GACTrB,EAASb,OAUVkD,cAAcvC,GAEV,kBAAKuC,cAAcvC,MAC5B,CAAC+B,EAAO7E,EAAcF,EAAcM,EAAUiE,EAASpC,EAAeD,EAAeE,EAAaC,EAAYmC,IAGpH,IAAIP,EAAM,CACNtB,WAAYgC,EACZ9B,UAAWgC,EACX7E,aAAcyD,EACd1D,cAAe0D,EACfV,eAAgBA,GAEhB,OACI,qCACI,wBAcJ,sBAAKnC,UAAU,YAAf,UACI,qBAAKA,UAAU,SAAf,SACI,gCACI,iCAAM,cAAC,EAAD,IAAN,OACA,+BAAM,cAAC,EAAD,CACFZ,aAAcA,EACd6C,UAAWgC,EACXC,cAAeA,EACfnC,WAAYgC,EACZC,eAAgBA,EAChBnB,OAAQA,EACRxD,QAASA,EACT2D,UAAWA,EACXK,IAAKA,EACLO,UAAWA,EACPD,OAAQA,WAMxB,8BACI,cAAC,EAAD,CAAavE,aAAcA,MAE7BsE,EAKF,cAAC,EAAD,CAAWL,IAAKA,IAJhB,wBAAQrD,UAAU,SAASyC,QAAS,WAChCH,EAASlB,MADb,0BC/UGwD,MAdf,WACE,IAAM1F,EAAQD,aAAY,SAACC,GAAD,OAAWA,KAKrC,OAJAoF,qBAAU,WACRO,aAAaC,QAAQ,OAAQC,KAAKC,UAAU9F,MAC3C,CAACA,IAGF,qBAAKc,UAAU,MAAf,SACE,cAAC,EAAD,O,eCJN6E,aAAaI,WAAW,QAExB,IAAMC,EAAe,CACnBnD,WAAY,EAEZE,UAAW,GACXG,MAAO,EACPhD,aAAc,KACdE,cAAc,EACdI,SAAU,UACVgE,QAAQ,GCjBKyB,eDuBY,WAAmC,IAAlCjG,EAAiC,uDAAzBgG,EAAcE,EAAW,uCAC3D,OAAQA,EAAO/D,MACb,KAAKT,EAEH,OAAO,2BACF1B,GADL,IAEE6C,WAAYqD,EAAO/B,IAAItB,WACvBE,UAAWmD,EAAO/B,IAAIpB,UACtB7C,aAAwC,GAA1BgG,EAAO/B,IAAIjE,eAK7B,KAAKyB,EACH,OAAO,2BACF3B,GADL,IAEEwE,QAAQ,EACRpE,cAAc,EACdI,SAAU,YAEd,KAAKoB,EAEH,OADA+C,QAAQC,IAAI,YACL,2BACF5E,GADL,IAEEE,aAAcF,EAAME,aAAe,IAEvC,KAAK8B,EACH,OAAO,2BACFhC,GADL,IAEEI,cAAc,IAGlB,KAAK6B,EACH,OAAO,2BACFjC,GADL,IAEE6C,WAAY,EACJsD,SAAU,EACV3F,SAAU,UACVN,aAAc,KACdE,cAAc,EACdoE,QAAQ,IAOpB,KAAK3C,EACH,OAAO,2BACF7B,GADL,IAEEQ,SAAU,UACVN,aAAmC,GAArBF,EAAME,eAGxB,KAAK4B,EACH,OAAO,2BACF9B,GADL,IAEEQ,SAAU,QACVN,aAAiC,GAAnBF,EAAM6C,aAGtB,KAAKd,EACH,OAAO,2BACF/B,GADL,IAEEQ,SAAU,QACVN,aAAgC,GAAlBF,EAAM+C,YAE1B,QACE,OAAO/C,KCzFXoG,OAAOC,8BAAgCD,OAAOC,gCCKhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.3ed62148.chunk.js","sourcesContent":["// import React from 'react'\r\n// import { useEffect } from 'react';\r\n// import { useSelector } from 'react-redux';\r\n// import './TimerLayout.css'\r\n// // import StartStop from '../StartStop/StartStop';\r\n// import { useDispatch } from 'react-redux';\r\n// import { decrease_time, reset_time } from '../../store/action/action';\r\n\r\n// function TimerLayout() {\r\n//   const radius = 160;\r\n//    const stroke = 5;\r\n//    const normalizedRadius = radius - stroke * 2;\r\n//   const circumference = normalizedRadius * 2 * Math.PI;\r\n\r\n//   const dispatch = useDispatch()\r\n//   const state = useSelector(state => state)\r\n//   // console.log(state);\r\n//   const minuteSecond = useSelector(state => state.minuteSecond);\r\n//   console.log(minuteSecond);\r\n//   // console.log(minuteSecond);\r\n//   const timerRunning = useSelector(state => state.timerRunning);\r\n//   let minutes = Math.floor(minuteSecond / 60);\r\n//   let seconds = minuteSecond - minutes * 60;\r\n//   console.log(minutes);\r\n  \r\n//   const interval = useSelector(state => state.interval)\r\n  \r\n//   // console.log(seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds );\r\n//   // console.log(minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes + \"minutes\");\r\n//   return (\r\n//       <>\r\n//          <div className=\"TimeDisplay\">\r\n//         <svg width=\"100%\" viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\r\n//           <circle\r\n//             stroke=\"#ddd\"\r\n//             fill=\"#fff\"\r\n//             strokeWidth={stroke}\r\n//             r={normalizedRadius}\r\n//             cx={radius}\r\n//             cy={radius}\r\n//             // radius={10}\r\n//           />\r\n//         </svg>\r\n//         <div>\r\n//         <div><p>{interval}</p></div>\r\n              \r\n\r\n//           <div className=\"mainNumber\">\r\n//             <span>\r\n//             {minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes} : {seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds}\r\n//           </span>\r\n//           </div>\r\n//           <p>Pomodoro Technique</p>\r\n//         </div>\r\n//       </div>\r\n//       {/* <StartStop /> */}\r\n//       {/* <button onClick={() => {\r\n//         dispatch(reset_time())\r\n//       }}>reset</button> */}\r\n//       </>\r\n//     )\r\n// }\r\n\r\n// export default TimerLayout\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './TimerLayout.css'\r\n// import { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\n// import StartStop from '../StartStop/StartStop';\r\nimport { useDispatch } from 'react-redux';\r\n// import { decrease_time, reset_time } from '../../store/action/action';\r\nfunction TimerLayout(props) {\r\n  const dispatch = useDispatch()\r\n  const sessionLength = useSelector(state => state.sessionLength);\r\n  const minuteSecond = useSelector(state => state.minuteSecond);\r\n  const timerRunning = useSelector(state => state.timerRunning);\r\n  let minutes = Math.floor(minuteSecond / 60);\r\n  let seconds = minuteSecond - minutes * 60;\r\n    \r\n  const interval = useSelector(state => state.interval)\r\n  const radius = 150;\r\n    const stroke = 5;\r\n  const normalizedRadius = radius - stroke * 4;\r\n  // console.log(normalizedRadius);\r\n    const circumference = normalizedRadius * 2 * Math.PI;\r\n  const strokeDashoffset = circumference - ( minuteSecond / 60 ) * circumference;\r\n  // console.log(strokeDashoffset);\r\n  \r\n  return (\r\n      <>\r\n      <div className=\"TimeDisplay\">\r\n            <svg width=\"100%\" viewBox={`0 0 ${radius * 2} ${radius * 2}`}>\r\n                <circle\r\n                    stroke=\"#ddd\"\r\n                    fill=\"#fff\"\r\n                    strokeWidth={stroke}\r\n                    r={normalizedRadius}\r\n                    cx={radius}\r\n                    cy={radius}\r\n                />\r\n                <circle\r\n                    stroke=\"#D9534F\"\r\n                    fill=\"transparent\"\r\n                    strokeWidth={stroke}\r\n                    // strokeDasharray={circumference + ' ' + circumference}\r\n                    style={{ strokeDashoffset }}\r\n                    r={normalizedRadius}\r\n                    cx={radius}\r\n                    cy={radius}\r\n                />\r\n            </svg>\r\n            <div class=\"mainNumber\">\r\n          {minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes} : {seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds}\r\n          <p>Pomodoro Technique</p>\r\n          <p>{interval}</p>\r\n            </div>\r\n        \r\n        </div>\r\n      </>\r\n    )\r\n}\r\nexport default TimerLayout","export const SAVE_TIME = \"SAVE_TIME\";\r\nexport const START_TIME = \"START_TIME\";\r\nexport const DECREASE_TIME = \"DECREASE_TIME\";\r\nexport const SWITCH_SESSION = \"SWITCH_SESSION\";\r\nexport const SHORT_BREAK = \"SHORT_BREAK\";\r\nexport const LONG_BREAK = \"LONG_BREAK\";\r\nexport const STOP_TIME = \"STOP_TIME\";\r\nexport const RESET_TIME = \"RESET_TIME\";\r\n\r\nexport const save_time = (obj) => ({\r\n  // Saved input value in setting [all ok]\r\n  type: SAVE_TIME,\r\n  obj,\r\n});\r\n\r\n // start time for pomodoro\r\nexport const start_time = () => ({\r\n  type: START_TIME,\r\n});\r\n\r\n// decrease minute and second\r\nexport const decrease_time = () => ({\r\n  type: DECREASE_TIME,\r\n})\r\n\r\nexport const stop_time = () => ({\r\n  type: STOP_TIME,\r\n})\r\n\r\nexport const reset_time = (obj) => ({\r\n  type: RESET_TIME,\r\n  obj,\r\n});\r\n\r\nexport const switchSession = () => ({\r\n  type: SWITCH_SESSION,\r\n});\r\n\r\nexport const short_Break = () => ({\r\n  type: SHORT_BREAK,\r\n});\r\n\r\n\r\nexport const long_Break = () => ({\r\n  type: LONG_BREAK,\r\n});\r\n","// // import React, { useEffect, useState } from 'react'\r\n// // import './Settings.css'\r\n// // import Button from \"react-bootstrap/Button\";\r\n// // import Modal from \"react-bootstrap/Modal\";\r\n// // import { AiFillSetting } from \"react-icons/ai\";\r\n// // import { useSelector } from 'react-redux';\r\n// // import { useDispatch } from 'react-redux';\r\n// // import { save_time } from '../../store/action/action';\r\n\r\n// // function Settings() {\r\n// //   // bootstrap\r\n// //   const [show, setShow] = useState(false);\r\n// //   const handleClose = () => setShow(false);\r\n// //   const handleShow = () => setShow(true);\r\n\r\n// //   // minute\r\n// //   const minuteSecond = useSelector((state) => state.minuteSecond);\r\n// //   let minutes = Math.floor(minuteSecond /60);\r\n// //   const [minute, setMinute] = useState(minutes);\r\n// //   // let minutes = Math.floor(minuteSecond / 60);\r\n// //   // let seconds = minuteSecond - minutes * 60;\r\n// //   console.log(minutes);\r\n\r\n// //   // console.log(seconds < 10 ? (\"0\" + seconds).slice(-2) : seconds );\r\n// //   // console.log(minutes < 10 ? (\"0\" + minutes).slice(-2) : minutes);\r\n\r\n\r\n\r\n// //   // short break\r\n// //   const shortBreakFromStore = useSelector((state) => state.shortBreak);\r\n// //   const [shortBreak, setShortBreak] = useState(shortBreakFromStore);\r\n// //   // long break\r\n// //   const longBreakFromStore = useSelector((state) => state.longBreak);\r\n// //   const [longBreak, setLongBreak] = useState(longBreakFromStore);\r\n// //   // count\r\n// //   const countFromStore = useSelector((state) => state.count);\r\n// //   const [count, setCount] = useState(countFromStore);\r\n\r\n// //   // dispatch\r\n// //   const dispatch = useDispatch();\r\n// //   // console.log(minute + \"minuteSecond\");\r\n// //   let obj = {\r\n// //     shortBreak: shortBreak,\r\n// //     longBreak: longBreak,\r\n// //     minuteSecond: minute,\r\n// //   };\r\n\r\n// //   //  let state_time = useSelector((state) => state.state)\r\n\r\n// //   const onSave = () => {\r\n// //     handleClose();\r\n// //     dispatch(save_time(obj));\r\n// //   };\r\n\r\n// //   return (\r\n// //     <>\r\n// //       <Button style={{ width: 50, height: 50 }} onClick={handleShow}>\r\n// //         <AiFillSetting />\r\n// //       </Button>\r\n\r\n// //       <Modal className=\"settings_main\" show={show} onHide={handleClose}>\r\n// //         <div className=\"settings__container\">\r\n// //           <h3>Settings</h3>\r\n// //           <div>\r\n// //             <h4>Pomodoro</h4>\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               value={minute}\r\n// //               onChange={(e) => setMinute(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div>\r\n// //             <h4>Short Break</h4>\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               value={shortBreak}\r\n// //               onChange={(e) => setShortBreak(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div>\r\n// //             <h4>Long Break</h4>\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               value={longBreak}\r\n// //               onChange={(e) => setLongBreak(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div>\r\n// //             <h4>Pomodoro Count</h4>\r\n// //             <input\r\n// //               type=\"number\"\r\n// //               value={count}\r\n// //               onChange={(e) => setCount(e.target.value)}\r\n// //             />\r\n// //           </div>\r\n// //           <div className=\"text\">Auto Play without push notifications</div>\r\n// //           <div>\r\n// //             <input className=\"checked\" type=\"checkbox\" />\r\n// //           </div>\r\n// //           <Modal.Footer>\r\n// //             <Button\r\n// //               style={{ marginTop: 15, textAlign: \"center\" }}\r\n// //               type=\"primary\"\r\n// //               onClick={onSave}\r\n// //             >\r\n// //               all ok\r\n// //             </Button>\r\n// //           </Modal.Footer>\r\n// //         </div>\r\n// //       </Modal>\r\n// //     </>\r\n// //   );\r\n// // }\r\n\r\n// // export default Settings\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import \"./Settings.css\";\r\n// import Button from \"react-bootstrap/Button\";\r\n// import Modal from \"react-bootstrap/Modal\";\r\n// import { AiFillSetting } from \"react-icons/ai\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { save_time } from \"../../store/action/action\";\r\n// // import longBreak from '../../store/action/action'\r\n\r\n\r\n\r\n\r\n// function Settings(props) {\r\n//   // bootstrap\r\n//   const [show, setShow] = useState(false);\r\n//   const handleClose = () => setShow(false);\r\n//   const handleShow = () => setShow(true);\r\n//   // // minute\r\n//   // const minuteSecond = useSelector((state) => state.minuteSecond);\r\n//   // const sessionLength = useSelector((state) => state.sessionLength);\r\n//   // let minutes = Math.floor(minuteSecond / 60);\r\n//   // const [minute, setMinute] = useState(props.minutes);\r\n//   // console.log(props.minutes);\r\n//   // minute\r\n//   // const minuteSecond = useSelector((state) => state.minuteSecond);\r\n//   // const sessionLength = useSelector((state) => state.sessionLength);\r\n//   // let minutes = Math.floor(props.minuteSecond / 60);\r\n//   // const [minute, setMinute] = useState(props.minutes);\r\n//   // // short break\r\n//   // const shortBreakFromStore = useSelector((state) => state.shortBreak);\r\n//   // const [shortBreak, setShortBreak] = useState(shortBreakFromStore);\r\n//   // short break\r\n//   // const shortBreakFromStore = useSelector((state) => state.shortBreak);\r\n//   const [shortBreak, setShortBreak] = useState(props.shortBreakFromStore);\r\n//   // // long break\r\n//   // const longBreakFromStore = useSelector((state) => state.longBreak);\r\n//   // const [longBreak, setLongBreak] = useState(longBreakFromStore);\r\n//   // long break\r\n//   // const longBreakFromStore = useSelector((state) => state.longBreak);\r\n//   const [longBreak, setLongBreak] = useState(props.longBreakFromStore);\r\n//   // count\r\n//   // const countFromStore = useSelector((state) => state.count);\r\n//   // const [count, setCount] = useState(countFromStore);\r\n//   // count\r\n//   // const countFromStore = useSelector((state) => state.count);\r\n//   const [count, setCount] = useState(props.countFromStore);\r\n//   // dispatch\r\n//   const dispatch = useDispatch();\r\n//   // console.log(minute + \"minuteSecond\");\r\n//   // let obj = {\r\n//   //   shortBreak: shortBreak,\r\n//   //   longBreak: longBreak,\r\n//   //   minuteSecond: minute,\r\n//   //   sessionLength: minute,\r\n//   // };\r\n//   const onSave = () => {\r\n//     handleClose();\r\n//     // dispatch(save_time(props.obj));\r\n//   };\r\n//   return (\r\n//     <>\r\n//       <Button style={{ width: 50, height: 50 }} onClick={handleShow}>\r\n//         <AiFillSetting />\r\n//       </Button>\r\n//       <Modal className=\"settings_main\" show={show} onHide={handleClose}>\r\n//         <div className=\"settings__container\">\r\n//           <h3>Settings</h3>\r\n//           <div>\r\n//             <h4>Pomodoro</h4>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={props.minute}\r\n//               onChange={(e) => props.setMinute(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <h4>Short Break</h4>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={shortBreak}\r\n//               onChange={(e) => setShortBreak(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <h4>Long Break</h4>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={longBreak}\r\n//               onChange={(e) => setLongBreak(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div>\r\n//             <h4>Pomodoro Count</h4>\r\n//             <input\r\n//               type=\"number\"\r\n//               value={count}\r\n//               onChange={(e) => setCount(e.target.value)}\r\n//             />\r\n//           </div>\r\n//           <div className=\"text\">Auto Play without push notifications</div>\r\n//           <div>\r\n//             <input className=\"checked\" type=\"checkbox\" />\r\n//           </div>\r\n//           <Modal.Footer>\r\n//             <Button\r\n//               style={{ marginTop: 15, textAlign: \"center\" }}\r\n//               type=\"primary\"\r\n//               onClick={onSave}\r\n//             >\r\n//               all ok\r\n//             </Button>\r\n//           </Modal.Footer>\r\n//         </div>\r\n//       </Modal>\r\n//     </>\r\n//   );\r\n// }\r\n// export default Settings;\r\n\r\n// =======================================================================\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Settings.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { AiFillSetting } from \"react-icons/ai\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { save_time } from \"../../store/action/action\";\r\nfunction Settings(props) {\r\n  // bootstrap\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  const [shortBreak, setShortBreak] = useState(props.shortBreak);\r\n  const [longBreak, setLongBreak] = useState(props.longBreak);\r\n  const [count, setCount] = useState(props.countFromStore);\r\n  // dispatch\r\n  const dispatch = useDispatch();\r\n  // let obj = {\r\n  //   shortBreak: shortBreak,\r\n  //   longBreak: longBreak,\r\n  //   minuteSecond: minute,\r\n  //   sessionLength: minute,\r\n  // };\r\n  const onSave = () => {\r\n    handleClose();\r\n    dispatch(save_time(props.obj));\r\n  };\r\n  return (\r\n    <>\r\n      <Button style={{ width: 50, height: 50 }} onClick={handleShow}>\r\n        <AiFillSetting />\r\n      </Button>\r\n      <Modal className=\"settings_main\" show={show} onHide={handleClose}>\r\n        <div className=\"settings__container\">\r\n          <h3>Settings</h3>\r\n          <div>\r\n            <h4>Pomodoro</h4>\r\n            <input\r\n              // type=\"number\"\r\n              value={props.minute}\r\n              onChange={(e) => props.setMinute(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>Short Break</h4>\r\n            <input\r\n              // type=\"number\"\r\n              value={shortBreak}\r\n              onChange={(e) => setShortBreak(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>Long Break</h4>\r\n            <input\r\n              // type=\"number\"\r\n              value={longBreak}\r\n              onChange={(e) => setLongBreak(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h4>Pomodoro Count</h4>\r\n            <input\r\n              type=\"number\"\r\n              value={count}\r\n              onChange={(e) => setCount(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"text\">Auto Play without push notifications</div>\r\n          <div>\r\n            <input className=\"checked\" type=\"checkbox\" />\r\n          </div>\r\n          <Modal.Footer>\r\n            <Button\r\n              style={{ marginTop: 15, textAlign: \"center\" }}\r\n              type=\"primary\"\r\n              onClick={onSave}\r\n            >\r\n              all ok\r\n            </Button>\r\n          </Modal.Footer>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\nexport default Settings;\r\n","import React, { useState } from 'react'\r\nimport './Info.css'\r\nimport { BsInfoCircleFill } from \"react-icons/bs\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nfunction Info() {\r\nconst [show, setShow] = useState(false);\r\n\r\nconst handleClose = () => setShow(false);\r\nconst handleShow = () => setShow(true);\r\n\r\n    return (\r\n      <>\r\n        <Button style={{ width: 50, height: 50, marginRight: 100 }} onClick={handleShow}>\r\n          <BsInfoCircleFill />\r\n        </Button>\r\n\r\n        <Modal className=\"settings_main\" show={show} onHide={handleClose}>\r\n          {/* <Modal.Header className=\"\"> */}\r\n          <div className=\"settings__container\">\r\n            <div>\r\n              <h3>About Pomodoro Technique</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit, amet consectetur adipisicing elit. Nihil\r\n                labore sit quas nam repellat perspiciatis autem, distinctio\r\n                suscipit ex, quae in fuga?\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>Use Experience</h3>\r\n              <p>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                Reiciendis aliquid cupiditate fugiat velit? Quam explicabo\r\n                consequuntur, odio non qui recusandae vitae dolore nam odit eius\r\n                maxime maiores voluptate quaerat provident?\r\n              </p>\r\n            </div>\r\n            <Button\r\n              style={{ marginTop: 15 }}\r\n              type=\"primary\"\r\n              onClick={handleClose}\r\n            >\r\n              close\r\n            </Button>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default Info\r\n","export default __webpack_public_path__ + \"static/media/finished.b35b538c.mp3\";","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux'\r\nimport { start_time, stop_time, reset_time } from \"../../store/action/action\";\r\n\r\nfunction StartStop() {\r\n    const dispatch = useDispatch()\r\n  const timerRunning = useSelector(state => state.timerRunning)\r\n  const minuteSecond = useSelector(state => state.minuteSecond)\r\n\r\n  \r\n    return (\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            timerRunning ? dispatch(stop_time()) : dispatch(start_time());\r\n          }}\r\n        >\r\n          {timerRunning ? \"stop\" : \"continue\"}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            dispatch(reset_time());\r\n          }}\r\n        >\r\n          reset\r\n        </button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StartStop\r\n","// // import React from 'react'\r\n// // import './Main.css'\r\n// // import TimerLayout from '../TimerLayout/TimerLayout'\r\n// // import Settings from '../Settings/Settings'\r\n// // import Info from '../Info/Info'\r\n// // import { useDispatch } from 'react-redux'\r\n// // import { useSelector } from 'react-redux'\r\n// // import { decrease_time, start_time, switchBreak, switchSession } from '../../store/action/action'\r\n// // import { useEffect } from 'react'\r\n// // // music\r\n// // import sound from \"../../ride.wav\"\r\n// // import StartStop from '../StartStop/StartStop'\r\n\r\n// // function Main() {\r\n \r\n// //     const interval = useSelector(state => state.interval);\r\n// //     const timerRunning = useSelector(state => state.timerRunning);\r\n// //     const minuteSecond = useSelector(state => state.minuteSecond);\r\n// //     const longBreak = useSelector(state => state.longBreak);\r\n// //     // console.log(longBreak + \"LongBreak\");\r\n// //     const state = useSelector(state => state);\r\n// //     const dispatch = useDispatch()\r\n// //     const audio = new Audio(sound);\r\n\r\n// //     useEffect(() => {\r\n// //         let count = null;\r\n// //         if (timerRunning && minuteSecond > 0) {\r\n// //             count = setTimeout(() => {\r\n// //                 dispatch(decrease_time())\r\n// //         }, 100)\r\n// //         } else if ( minuteSecond === 0) {\r\n// //             count = setTimeout(() => {\r\n// //                 dispatch(decrease_time())\r\n// //         }, 100)\r\n// //             audio.play()\r\n// //             // dispatch(decrease_time())\r\n// //          if (interval === 'Session') {\r\n// //                 dispatch(switchBreak())\r\n// //         }\r\n// //         else if (interval === \"Break\") {\r\n// //             dispatch(switchSession())\r\n// //             }\r\n// //         }\r\n// //         else {\r\n// //            clearInterval(count)\r\n// //         }\r\n// //         return () => clearInterval(count)\r\n\r\n// //     },[timerRunning, minuteSecond, state, interval, switchSession, decrease_time, switchBreak, audio])\r\n    \r\n    \r\n\r\n\r\n// //     return (\r\n// //         <div className=\"container\">\r\n// //             <div className=\"header\">\r\n// //                 <div>\r\n// //                     <span><Info/> </span>\r\n// //                     <span><Settings/></span>\r\n// //                 </div>\r\n// //             </div>\r\n// //             <div>\r\n// //                 <TimerLayout/>\r\n// //             </div>\r\n// //             {!timerRunning ? (\r\n// //             <button className=\"button\" onClick={() => {\r\n// //                 dispatch(start_time())\r\n// //                 }}>start</button>) : (\r\n// //                     <StartStop/>\r\n// //             )}\r\n// //             </div>\r\n// //     )\r\n// // }\r\n\r\n// // export default Main\r\n\r\n\r\n\r\n// import React, {useState} from 'react'\r\n// import './Main.css'\r\n// import TimerLayout from '../TimerLayout/TimerLayout'\r\n// import Settings from '../Settings/Settings'\r\n// import Info from '../Info/Info'\r\n// import { useDispatch } from 'react-redux'\r\n// import { useSelector } from 'react-redux'\r\n// import { decrease_time, start_time, short_Break, switchSession, long_Break  } from '../../store/action/action'\r\n// import { useEffect } from 'react'\r\n// // music\r\n// import sound from \"../../ride.wav\"\r\n// import StartStop from '../StartStop/StartStop'\r\n// function Main() {\r\n//     const interval = useSelector(state => state.interval);\r\n//     const timerRunning = useSelector(state => state.timerRunning);\r\n//     const minuteSecond = useSelector(state => state.minuteSecond);\r\n//     const longBreakFromStore = useSelector(state => state.longBreak);\r\n//     const shortBreakFromStore = useSelector(state => state.shortBreak);\r\n//     const sessionLength = useSelector(state => state.sessionLength);\r\n\r\n//     const minutes = Math.floor(minuteSecond / 60);\r\n//     console.log(minutes);\r\n//     const [minute, setMinute] = useState(minutes);\r\n//     const dispatch = useDispatch()\r\n//     const audio = new Audio(sound);\r\n//     useEffect(() => {\r\n//         let count = null;\r\n//         if (timerRunning && minuteSecond > 0) {\r\n//             count = setInterval(() => {\r\n//                 dispatch(decrease_time())\r\n//         }, 100)\r\n//         } else if (timerRunning && minuteSecond === 0) {\r\n//             audio.play()\r\n//             count = setInterval(() => {\r\n//                 dispatch(decrease_time())\r\n//         }, 100)\r\n//         if (interval === 'Session') {\r\n//              dispatch(short_Break());\r\n             \r\n//         }\r\n//         else if (interval === \"Break\") {\r\n//              dispatch(switchSession());\r\n//             }\r\n//         // else if (interval === 'Session') {\r\n//         //      dispatch(long_Break());\r\n//         // }\r\n//         //     else if (interval === \"LongBreak\") {\r\n//         //      dispatch(switchSession());\r\n//         //      }\r\n         \r\n//         }\r\n//         else {\r\n//            clearInterval(count)\r\n//         }\r\n//         return () => clearInterval(count)\r\n//     },[audio, timerRunning, minuteSecond, interval, switchSession, decrease_time, short_Break,])\r\n// //    const sessionLength = useSelector((state) => state.sessionLength);\r\n//     // shortBreak\r\n// //    const shortBreakFromStore = useSelector((state) => state.shortBreak);\r\n//     // longBreak \r\n//     // const longBreakFromStore = useSelector((state) => state.longBreak);\r\n//     // \r\n//    const countFromStore = useSelector((state) => state.count); \r\n// //    let minutes = Math.floor(minuteSecond / 60);\r\n// //    const [minute, setMinute] = useState(minutes);\r\n// let obj = {\r\n//     shortBreakFromStore: shortBreakFromStore,\r\n//     longBreakFromStore: longBreakFromStore,\r\n//     minuteSecond: minute,\r\n//     sessionLength: minute,\r\n//     countFromStore: countFromStore,\r\n//   };\r\n//     return (\r\n//         <div className=\"container\">\r\n//             <div className=\"header\">\r\n//                 <div>\r\n//                     <span><Info/> </span>\r\n//                     <span><Settings\r\n//                         minuteSecond={minuteSecond}\r\n//                         shortBreakFromStore={shortBreakFromStore}\r\n//                         longBreakFromStore={longBreakFromStore}\r\n//                         countFromStore={countFromStore}\r\n//                         minute={minute}\r\n//                         minutes={minutes}\r\n//                         setMinute={setMinute}\r\n//                         obj={obj}\r\n//                     /></span>\r\n//                 </div>\r\n//             </div>\r\n//             <div>\r\n//                 <TimerLayout minuteSecond={minuteSecond}/>\r\n//             </div>\r\n//             {/* {!timerRunning ? ( */}\r\n//             <button className=\"button\" onClick={() => {\r\n//                 dispatch(start_time())\r\n//             }}>start</button>\r\n//             {/* //  ) : (  */}\r\n//             <StartStop obj={obj}/>\r\n//             {/* //  )}  */}\r\n//             </div>\r\n//     )\r\n// }\r\n// export default Main\r\n\r\n// ===========================================================================================\r\n\r\n\r\nimport React, {useState} from 'react'\r\nimport './Main.css'\r\nimport TimerLayout from '../TimerLayout/TimerLayout'\r\nimport Settings from '../Settings/Settings'\r\nimport Info from '../Info/Info'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { decrease_time, start_time, short_Break, switchSession, long_Break } from '../../store/action/action'\r\nimport { useEffect } from 'react'\r\n// import AudioPlayer from 'react-audio-element';\r\n// import { Alert } from 'antd';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// import { Result, Button } from 'antd';\r\n\r\n// music\r\nimport sound from \"../../../src/components/Audio/finished.mp3\"\r\nimport StartStop from '../StartStop/StartStop'\r\n// import pianino from '../../audio/pianino.mp3'\r\n// import two from '../../audio/two.mp3'\r\n\r\n\r\n\r\n\r\nfunction Main() {\r\n    // state\r\n    const button = useSelector(state => state.button);\r\n    const interval = useSelector(state => state.interval);\r\n    const timerRunning = useSelector(state => state.timerRunning);\r\n    const minuteSecond = useSelector(state => state.minuteSecond);\r\n    const longBreak = useSelector(state => state.longBreak);\r\n    const shortBreak = useSelector(state => state.shortBreak);\r\n    const sessionLength = useSelector(state => state.sessionLength);\r\n    const countFromStore = useSelector((state) => state.count); \r\n    const [count1, setCount1] = useState(countFromStore)\r\n    console.log(\"count \" + count1);\r\n    const minutes = Math.floor(minuteSecond / 60);\r\n    const [minute, setMinute] = useState(minutes);\r\n    const [shortBreak1, setShortBreak1] = useState(shortBreak);\r\n    const [longBreak1, setLongBreak1] = useState(longBreak);\r\n    console.log(\" longBreak \" + longBreak1);\r\n    console.log(\" shortBreak \" + shortBreak1);\r\n    console.log(\" minute \" + minute);\r\n    const dispatch = useDispatch()\r\n    const audio = new Audio(sound);\r\n\r\n\r\n    const ses = () => {\r\n        // <Alert  >time to work </Alert>\r\n        alert('time to work')\r\n\r\n        // <Result\r\n        // title=\"Your operation has been executed\"\r\n        // extra={\r\n        //   <Button type=\"primary\" key=\"console\">\r\n        //     x\r\n        //   </Button>\r\n\r\n    // <Alert\r\n    //     action={ <Button color=\"inherit\" size=\"small\"> X </Button>  }>\r\n    //     time to work\r\n    //   </Alert>\r\n\r\n   audio.play() \r\n    }\r\n\r\n\r\n    const res = () => {\r\n    //     <Alert\r\n    //     action={ <Button color=\"inherit\" size=\"small\"> X </Button>  }>\r\n    //     time to rest\r\n    //   </Alert>\r\n\r\n        // <Alert variant=\"outlined\" severity=\"success\">time to rest </Alert>\r\n        alert('time to break')\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        let count = null;\r\n        if (timerRunning && minuteSecond > 0) {\r\n            count = setInterval(() => {\r\n                dispatch(decrease_time())\r\n        }, 50)\r\n        } else if (timerRunning && minuteSecond === 0) {\r\n            audio.play();\r\n\r\n        if (interval === 'Session') {\r\n            dispatch(short_Break());\r\n            setTimeout(() => {\r\n             res();\r\n            },50)\r\n        }\r\n\r\n        else if (interval === \"Break\" && minuteSecond === 0) {\r\n            setShortBreak1(shortBreak1 - 1)\r\n            setCount1(count1 - 1)\r\n            dispatch(switchSession());\r\n            setTimeout(() => {\r\n                ses();\r\n            }, 50)\r\n           \r\n            if (shortBreak1 === 1) {\r\n            setCount1(count1 - 1)\r\n            }\r\n            else if (count1 === 0) {\r\n            dispatch(long_Break())\r\n          } \r\n        }\r\n        // else \r\n            \r\n        //     if (interval === 'Session') {\r\n        //     dispatch(long_Break());\r\n        //     res(); \r\n        }\r\n        else {\r\n           clearInterval(count)\r\n        }\r\n        return ()=> clearInterval(count)\r\n    },[audio, timerRunning, minuteSecond, interval, count1,  switchSession, decrease_time, short_Break, long_Break, setCount1])\r\n\r\n\r\nlet obj = {\r\n    shortBreak: shortBreak1,\r\n    longBreak: longBreak1,\r\n    minuteSecond: minute,\r\n    sessionLength: minute,\r\n    countFromStore: countFromStore,\r\n  };\r\n    return (\r\n        <>\r\n            <div>\r\n\r\n                {/* <AudioPlayer src={pianino}\r\n                    classNames={\r\n                        {\r\n                            controlButton: \"custom-control\",\r\n                            playPause: \"custom-play-pause\",\r\n                            timeText: \"custom-time-text\",\r\n                            sliderTrack: \"custom-slider-track\"\r\n                        }\r\n                    } overrideStyles={true} \r\n             /> */}\r\n          </div>\r\n        \r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <div>\r\n                    <span><Info/> </span>\r\n                    <span><Settings\r\n                        minuteSecond={minuteSecond}\r\n                        longBreak={longBreak1}\r\n                        setLongBreak1={setLongBreak1}\r\n                        shortBreak={shortBreak1}\r\n                        setShortBreak1={setShortBreak1}\r\n                        minute={minute}\r\n                        minutes={minutes}\r\n                        setMinute={setMinute}\r\n                        obj={obj}\r\n                        setCount1={setCount1}\r\n                            count1={count1}\r\n                            \r\n                            \r\n                    /></span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <TimerLayout minuteSecond={minuteSecond}/>\r\n            </div>\r\n            {!button ? (\r\n            <button className=\"button\" onClick={() => {\r\n                dispatch(start_time())\r\n            }}>start</button>\r\n             ) : ( \r\n            <StartStop obj={obj}/>\r\n              )} \r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default Main","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './App.css';\nimport Main from './components/Main/Main';\n// import Settings from './components/Settings/Settings'\n// import Timer from './components/Timer/Timer';\n// import Stopwatch from './components/Timer/Timer';\n\nfunction App() {\n  const state = useSelector((state) => state);\n  useEffect(() => {\n    localStorage.setItem(\"time\", JSON.stringify(state));\n  }, [state]);\n  \n  return (\n    <div className=\"App\">\n      <Main />\n      </div>\n    \n  );\n}\n\nexport default App;\n","import {\r\n  SAVE_TIME,\r\n  START_TIME,\r\n  DECREASE_TIME,\r\n  SWITCH_SESSION,\r\n  STOP_TIME,\r\n  RESET_TIME,\r\n  SHORT_BREAK,\r\n  LONG_BREAK\r\n} from \"../action/action\";\r\n\r\n// const local = JSON.parse(localStorage.getItem(\"time\"));\r\nlocalStorage.removeItem(\"time\")\r\n\r\nconst initialState = {\r\n  shortBreak: 2,\r\n  // length25 : 1,\r\n  longBreak: 10,\r\n  count: 3,\r\n  minuteSecond: 1500,\r\n  timerRunning: false,\r\n  interval: \"Session\",\r\n  button: false\r\n};\r\n\r\n// session: state.session === 3600 ? state.session : state.userSetSession + 60,\r\n// userSetSession: state.userSetSession === 3600 ? state.userSetSession : state.userSetSession + 60\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SAVE_TIME:\r\n      // console.log(shortBreak);\r\n      return {\r\n        ...state,\r\n        shortBreak: action.obj.shortBreak,\r\n        longBreak: action.obj.longBreak,\r\n        minuteSecond: action.obj.minuteSecond * 60,\r\n\r\n        // interval: 'Session'\r\n        //  count: state.count,\r\n      };\r\n    case START_TIME:\r\n      return {\r\n        ...state,\r\n        button: true,\r\n        timerRunning: true,\r\n        interval: \"Session\"\r\n      };\r\n    case DECREASE_TIME:\r\n      console.log(\"decrease\");\r\n      return {\r\n        ...state,\r\n        minuteSecond: state.minuteSecond - 1,\r\n      };\r\n    case STOP_TIME:\r\n      return {\r\n        ...state,\r\n        timerRunning: false,\r\n      };\r\n\r\n    case RESET_TIME:\r\n      return {\r\n        ...state,\r\n        shortBreak: 5,\r\n                length25: 1,\r\n                interval: 'Session',\r\n                minuteSecond: 25 * 60,\r\n                timerRunning: false,\r\n                button: false,\r\n\r\n        // ...state,\r\n        // minuteSecond: state.minuteSecond,\r\n        // timerRunning: false,\r\n      };\r\n\r\n    case SWITCH_SESSION:\r\n      return {\r\n        ...state,\r\n        interval: \"Session\",\r\n        minuteSecond: state.minuteSecond * 60,\r\n      };\r\n    \r\n    case SHORT_BREAK:\r\n      return {\r\n        ...state,\r\n        interval: \"Break\",\r\n        minuteSecond: state.shortBreak * 60,\r\n      };\r\n\r\n      case LONG_BREAK:\r\n        return {\r\n          ...state,\r\n          interval: \"Break\",\r\n          minuteSecond: state.longBreak * 60,\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/reducers\";\r\n// import rootReducer from \"./reducers/rootReducer\";\r\n\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import { rootReducer } from './store/reducers/reducers';\n// import { createStore } from 'redux';\nimport store from './store/store'\nimport { Provider } from 'react-redux';\n\n\n// const store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}